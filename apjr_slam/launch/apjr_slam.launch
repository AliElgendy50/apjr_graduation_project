<launch>
  <!-- Arguments -->
  <arg name="model" default="apjr" />
  <arg name="slam_methods" default="gmapping" doc="slam type [gmapping, cartographer, hector, karto, frontier_exploration]"/>
  <arg name="configuration_basename" default="apjr_lds_2d.lua"/>
  <arg name="open_rviz" default="true"/>

  <!-- apjr -->

  <arg name="urdf_file" default="$(find xacro)/xacro '$(find apjr_bringup)/robot_description/urdf/apjr.xacro'" />
  <param name="robot_description" command="$(arg urdf_file)" />

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <!-- <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter" output="screen" >
    <rosparam command="load" file="$(find turtlebot3_manipulation_tools)/config/scan_data_filter.yaml" />
  </node> -->

  <!-- SLAM: Gmapping, Cartographer, Hector, Karto, Frontier_exploration, RTAB-Map -->
  <include file="$(find apjr_slam)/launch/apjr_$(arg slam_methods).launch">
    <arg name="configuration_basename" value="$(arg configuration_basename)"/>
  </include>

  <!-- <include file="/home/abdelrhman/catkin_ws/src/apjr_robot/apjr_control/launch/rosserial.launch">
  </include> -->

  <!-- rviz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find apjr_slam)/rviz/apjr_$(arg slam_methods).rviz"/>
  </group>

</launch>